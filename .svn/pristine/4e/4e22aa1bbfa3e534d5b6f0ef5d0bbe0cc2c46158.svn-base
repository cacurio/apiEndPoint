package ec.gob.dinardap.interoperacion.interoperadorws.servicio;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2019-03-07T10:56:46.301-05:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "InteroperadorAntService",
                  wsdlLocation = "/interoperador-DINARDAP-ant.wsdl",
                  targetNamespace = "http://servicio.interoperadorws.interoperacion.dinardap.gob.ec/")
public class InteroperadorAntService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://servicio.interoperadorws.interoperacion.dinardap.gob.ec/", "InteroperadorAntService");
    public final static QName InteroperadorAntPort = new QName("http://servicio.interoperadorws.interoperacion.dinardap.gob.ec/", "InteroperadorAntPort");
    static {
        URL url = InteroperadorAntService.class.getResource("/interoperador-DINARDAP-ant.wsdl");
        if (url == null) {
            url = InteroperadorAntService.class.getClassLoader().getResource("/interoperador-DINARDAP-ant.wsdl");
        }
        if (url == null) {
            java.util.logging.Logger.getLogger(InteroperadorAntService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "/interoperador-DINARDAP-ant.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public InteroperadorAntService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public InteroperadorAntService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InteroperadorAntService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public InteroperadorAntService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public InteroperadorAntService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public InteroperadorAntService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns InteroperadorAnt
     */
    @WebEndpoint(name = "InteroperadorAntPort")
    public InteroperadorAnt getInteroperadorAntPort() {
        return super.getPort(InteroperadorAntPort, InteroperadorAnt.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InteroperadorAnt
     */
    @WebEndpoint(name = "InteroperadorAntPort")
    public InteroperadorAnt getInteroperadorAntPort(WebServiceFeature... features) {
        return super.getPort(InteroperadorAntPort, InteroperadorAnt.class, features);
    }

}
