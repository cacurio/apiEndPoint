package ec.gob.dinardap.interoperabilidad.interoperador;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2019-03-07T10:56:46.753-05:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "interoperador",
                  wsdlLocation = "/interoperador-v2.wsdl",
                  targetNamespace = "http://interoperabilidad.dinardap.gob.ec/interoperador/")
public class Interoperador_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://interoperabilidad.dinardap.gob.ec/interoperador/", "interoperador");
    public final static QName InteroperadorPort = new QName("http://interoperabilidad.dinardap.gob.ec/interoperador/", "interoperadorPort");
    static {
        URL url = Interoperador_Service.class.getResource("/interoperador-v2.wsdl");
        if (url == null) {
            url = Interoperador_Service.class.getClassLoader().getResource("/interoperador-v2.wsdl");
        }
        if (url == null) {
            java.util.logging.Logger.getLogger(Interoperador_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "/interoperador-v2.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Interoperador_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Interoperador_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Interoperador_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public Interoperador_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Interoperador_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Interoperador_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns Interoperador
     */
    @WebEndpoint(name = "interoperadorPort")
    public Interoperador getInteroperadorPort() {
        return super.getPort(InteroperadorPort, Interoperador.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Interoperador
     */
    @WebEndpoint(name = "interoperadorPort")
    public Interoperador getInteroperadorPort(WebServiceFeature... features) {
        return super.getPort(InteroperadorPort, Interoperador.class, features);
    }

}
